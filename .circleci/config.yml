version: 2.1

orbs:
  github_status:
    commands:
      post_status:
        parameters:
          when:
            type: string
            default: on_success
          state:
            type: string
          description:
            type: string
            default: $GITHUB_STATUS_DESCRIPTION
          context:
            type: string
            default: $GITHUB_STATUS_CONTEXT
        steps:
          - run:
              when: <<parameters.when>>
              name: "GitHub Status: <<parameters.state>>"
              command: |
                set -euo pipefail
                set +u # Allow context and description to contain unbound variables.
                CONTEXT="<<parameters.context>>"
                DESCRIPTION="<<parameters.description>>"
                set -u
                [ -n "$CONTEXT" ] || CONTEXT="circleci/$CIRCLE_JOB"
                [ -n "$DESCRIPTION" ] || DESCRIPTION="$CONTEXT"
                # Export the latest values for CONTEXT and DESCRIPTION so later calls
                # do not need to set them explicitly again.
                echo "export GITHUB_STATUS_CONTEXT='$CONTEXT'" >> $BASH_ENV
                echo "export GITHUB_STATUS_DESCRIPTION='$DESCRIPTION'" >> $BASH_ENV
                # Compose our URL and auth pieces.
                API=https://api.github.com
                USER=$CIRCLE_PROJECT_USERNAME
                REPO=$CIRCLE_PROJECT_REPONAME
                SHA=$CIRCLE_SHA1
                AUTH=$GITHUB_STATUS_USER:$GITHUB_STATUS_TOKEN
                URL=$API/repos/$USER/$REPO/statuses/$SHA
                # Compose the body.
                # The read below will exit with 1 as it hits EOF,
                # so we temporarily disable error checking.
                set +e
                read -r -d '' BODY \<<EOF
                  {
                    "state": "<<parameters.state>>",
                    "target_url": "$CIRCLE_BUILD_URL",
                    "description": "<<parameters.state>>: $DESCRIPTION",
                    "context": "$CONTEXT"
                  } 
                EOF
                set -euo pipefail
                # Post the status (use echo-pipe not \<<< for greater shell compat).
                echo $BODY | curl -u $AUTH -XPOST -d@- $URL
      pending:
        parameters:
          description:
            type: string
            default: $GITHUB_STATUS_DESCRIPTION
          context:
            type: string
            default: $GITHUB_STATUS_CONTEXT
        steps:
          - post_status:
              when: always
              state: pending
              description: <<parameters.description>>
              context: <<parameters.context>>
      report:
        parameters:
          description:
            type: string
            default: $GITHUB_STATUS_DESCRIPTION
          context:
            type: string
            default: $GITHUB_STATUS_CONTEXT
        steps:
          - post_status:
              when: on_success
              state: success
              description: <<parameters.description>>
              context: <<parameters.context>>
          - post_status:
              when: on_fail
              state: failure
              description: <<parameters.description>>
              context: <<parameters.context>>

commands:
  print_env:
    parameters:
      exit_code:
        type: integer
    steps:
      - github_status/pending:
          description: sleeping 30s
      - run:
          name: printing env and sleeping 30s
          command: |
            set -euxo pipefail
            hidesecrets() { grep -vE '(TOKEN|SECRET|PASS|AUTH)'; }
            env | grep CIRCLE | hidesecrets
            echo ==================
            env | hidesecrets
            echo ==================
            whoami
            echo ==================
            sleep 30
            exit <<parameters.exit_code>>
      - github_status/report

executors:
  buildpack_deps:
    docker:
      - image: circleci/buildpack-deps:19.04-curl
  classic_machine:
    machine:
      image: circleci/classic:latest

jobs:
  print_env_success:
    executor: buildpack_deps
    steps:
      - print_env:
          exit_code: 0
  print_env_fail:
    executor: buildpack_deps
    steps:
      - print_env:
          exit_code: 1
  print_env_success_machine:
    executor: classic_machine
    steps:
      - print_env:
          exit_code: 0
  print_env_fail_machine:
    executor: classic_machine
    steps:
      - print_env:
          exit_code: 1

workflows:
  failing:
    jobs:
      - print_env_fail
      - print_env_fail_machine
  succeeding:
    jobs:
      - print_env_success
      - print_env_success_machine
